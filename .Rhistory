my_c <- c("Nepal")
my_a <- c("NPL")
library(rgeos); library(sf)
for (l in 1:length(my_c)) {
rm(list = setdiff(ls(), c("my_c", "my_a", "l")))
country <- my_c[l]
abb <- my_a[l]
##########
dat_path <- paste0("/Users/christianbaehr/GitHub/SCA Geocoding/", country, "/", country, "_master.csv")
dat <- read.csv(dat_path, stringsAsFactors = F)
dat <- dat[!is.na(dat$project_id), ]
dat_new <- dat[1,]
dat_new$geometry <- NA
dat_new <- dat_new[0,]
###
for(i in c(1:nrow(dat))) {
if(dat$christian_geojson[i] %in% c("", "good code up", "drop")) {
new_dat <- dat[i, (names(dat)!="christian_geojson")]
new_dat[, c("X", "Y")] <- NA
} else {
geo <- st_read(dat$christian_geojson[i])
#if(dat$level[i]=="province" & nrow(geo)>1) {stop("more than one province in row")}
if(dat$level[i]=="province" & nrow(geo)>1) {
a <- as(geo$geometry, "Spatial")
b <- gUnaryUnion(a)
c <- st_as_sf(b)
geo <- geo[1, ]
geo$geometry[1] <- c
geo$ENGTYPE_1 <- "Province"
}
points_shp <- st_centroid(geo$geometry)
points <- st_coordinates(points_shp)
new_dat <- dat[i, (names(dat)!="christian_geojson")]
new_dat[1:nrow(points), ] <- new_dat[1, ]
new_dat <- cbind(new_dat, points)
}
if (i==1) {
dat_out <- new_dat
} else {
dat_out <- rbind(dat_out, new_dat)
}
print(i)
}
dat_out_new <- dat_out
dat_out_new[, c("X", "Y")] <- round(data.frame(dat_out_new)[, c("X", "Y")], digits=2)
dat_out_new$merge_id <- paste0(dat_out_new$X, ", ", dat_out_new$Y)
###
gadm2_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_2.shp")
gadm2 <- st_read(gadm2_path, stringsAsFactors=F)
gadm2$centroids <- st_centroid(gadm2$geometry)
gadm2[, c("X", "Y")] <- st_coordinates(gadm2$centroids)
gadm2[, c("X", "Y")] <- round(data.frame(gadm2)[, c("X", "Y")], digits=2)
gadm2$merge_id <- paste0(gadm2$X, ", ", gadm2$Y)
names(gadm2)[names(gadm2)=="ENGTYPE_2"] <- "type"
names(gadm2)[names(gadm2)=="NAME_2"] <- "name"
names(gadm2)[names(gadm2)=="GID_2"] <- "GID"
###
sum(dat_out_new$merge_id %in% gadm2$merge_id)
sum(dat_out_new$merge_id=="NA, NA")
mask <- !((dat_out_new$merge_id %in% gadm2$merge_id) | (dat_out_new$merge_id=="NA, NA"))
unique(dat_out_new$level)
dat_out_new$level[dat_out_new$level=="actual province"] <- "province"
dat_out_new$level[dat_out_new$level==""] <- "country"
dat_out_new_district <- dat_out_new[dat_out_new$level=="district", ]
dat_out_new_district_merge <- merge(dat_out_new_district, gadm2[, c("merge_id", "name", "type", "GID", "geometry")], by="merge_id")
sum(duplicated(gadm2$merge_id))
gadm1_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_1.shp")
gadm1 <- st_read(gadm1_path, stringsAsFactors=F)
gadm1$centroids <- st_centroid(gadm1$geometry)
gadm1[, c("X", "Y")] <- st_coordinates(gadm1$centroids)
gadm1[, c("X", "Y")] <- round(data.frame(gadm1)[, c("X", "Y")], digits=2)
gadm1$merge_id <- paste0(gadm1$X, ", ", gadm1$Y)
names(gadm1)[names(gadm1)=="ENGTYPE_1"] <- "type"
names(gadm1)[names(gadm1)=="NAME_1"] <- "name"
names(gadm1)[names(gadm1)=="GID_1"] <- "GID"
names(gadm1)[names(gadm1)=="NAME_1"] <- "name"
dat_out_new_province <- dat_out_new[dat_out_new$level=="province", ]
dat_out_new_province_merge <- merge(dat_out_new_province, gadm1[, c("merge_id", "name", "type", "GID", "geometry")], by="merge_id")
###
gadm0_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_0.shp")
gadm0 <- st_read(gadm0_path, stringsAsFactors=F)
dat_out_new_merge_countrylevel <- dat_out_new[dat_out_new$level=="country", ]
dat_out_new_merge_countrylevel$geometry <- gadm0$geometry
dat_out_new_merge_countrylevel$name <- country
dat_out_new_merge_countrylevel$type <- "Country"
dat_out_new_merge_countrylevel$GID <- "Country"
dat_order <- names(dat_out_new_district_merge)
out <- rbind(dat_out_new_district_merge, dat_out_new_province_merge[, dat_order], dat_out_new_merge_countrylevel[, dat_order])
out$geometry[out$level=="country"] <- NULL
out <- out[, !(names(out) %in% c("merge_id", "GEO_codedUp", "location_details", "GEO_geojsonLink"))]
out$country <- country
names(out)[names(out)=="type"] <- "name_type"
out_file <- paste0("/Users/christianbaehr/Downloads/", country, "_2000-17_geocoded_", as.character(Sys.Date()), ".geojson")
out_file_csv <- paste0("/Users/christianbaehr/Downloads/", country, "_2000-17_geocoded_", as.character(Sys.Date()), ".csv")
write_sf(out, out_file, driver="GeoJSON", delete_dsn=T)
write.csv(data.frame(out)[names(out)!="geometry"], out_file_csv, row.names = F)
}
for (l in 1:length(my_c)) {
rm(list = setdiff(ls(), c("my_c", "my_a", "l")))
country <- my_c[l]
abb <- my_a[l]
##########
dat_path <- paste0("/Users/christianbaehr/GitHub/SCA Geocoding/", country, "/", country, "_master.csv")
dat <- read.csv(dat_path, stringsAsFactors = F)
dat <- dat[!is.na(dat$project_id), ]
dat_new <- dat[1,]
dat_new$geometry <- NA
dat_new <- dat_new[0,]
###
for(i in c(1:nrow(dat))) {
if(dat$christian_geojson[i] %in% c("", "good code up", "drop")) {
new_dat <- dat[i, (names(dat)!="christian_geojson")]
new_dat[, c("X", "Y")] <- NA
} else {
geo <- st_read(dat$christian_geojson[i])
#if(dat$level[i]=="province" & nrow(geo)>1) {stop("more than one province in row")}
if(dat$level[i]=="province" & nrow(geo)>1) {
a <- as(geo$geometry, "Spatial")
b <- gUnaryUnion(a)
c <- st_as_sf(b)
geo <- geo[1, ]
geo$geometry[1] <- c
geo$ENGTYPE_1 <- "Province"
}
points_shp <- st_centroid(geo$geometry)
points <- st_coordinates(points_shp)
new_dat <- dat[i, (names(dat)!="christian_geojson")]
new_dat[1:nrow(points), ] <- new_dat[1, ]
new_dat <- cbind(new_dat, points)
}
if (i==1) {
dat_out <- new_dat
} else {
dat_out <- rbind(dat_out, new_dat)
}
print(i)
}
dat_out_new <- dat_out
dat_out_new[, c("X", "Y")] <- round(data.frame(dat_out_new)[, c("X", "Y")], digits=2)
dat_out_new$merge_id <- paste0(dat_out_new$X, ", ", dat_out_new$Y)
###
gadm2_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_2.shp")
gadm2 <- st_read(gadm2_path, stringsAsFactors=F)
gadm2$centroids <- st_centroid(gadm2$geometry)
gadm2[, c("X", "Y")] <- st_coordinates(gadm2$centroids)
gadm2[, c("X", "Y")] <- round(data.frame(gadm2)[, c("X", "Y")], digits=2)
gadm2$merge_id <- paste0(gadm2$X, ", ", gadm2$Y)
names(gadm2)[names(gadm2)=="ENGTYPE_2"] <- "type"
names(gadm2)[names(gadm2)=="NAME_2"] <- "name"
names(gadm2)[names(gadm2)=="GID_2"] <- "GID"
###
sum(dat_out_new$merge_id %in% gadm2$merge_id)
sum(dat_out_new$merge_id=="NA, NA")
mask <- !((dat_out_new$merge_id %in% gadm2$merge_id) | (dat_out_new$merge_id=="NA, NA"))
unique(dat_out_new$level)
dat_out_new$level[dat_out_new$level=="actual province"] <- "province"
dat_out_new$level[dat_out_new$level==""] <- "country"
dat_out_new_district <- dat_out_new[dat_out_new$level=="district", ]
dat_out_new_district_merge <- merge(dat_out_new_district, gadm2[, c("merge_id", "name", "type", "GID", "geometry")], by="merge_id")
sum(duplicated(gadm2$merge_id))
gadm1_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_1.shp")
gadm1 <- st_read(gadm1_path, stringsAsFactors=F)
gadm1$centroids <- st_centroid(gadm1$geometry)
gadm1[, c("X", "Y")] <- st_coordinates(gadm1$centroids)
gadm1[, c("X", "Y")] <- round(data.frame(gadm1)[, c("X", "Y")], digits=2)
gadm1$merge_id <- paste0(gadm1$X, ", ", gadm1$Y)
names(gadm1)[names(gadm1)=="ENGTYPE_1"] <- "type"
names(gadm1)[names(gadm1)=="NAME_1"] <- "name"
names(gadm1)[names(gadm1)=="GID_1"] <- "GID"
names(gadm1)[names(gadm1)=="NAME_1"] <- "name"
dat_out_new_province <- dat_out_new[dat_out_new$level=="province", ]
dat_out_new_province_merge <- merge(dat_out_new_province, gadm1[, c("merge_id", "name", "type", "GID", "geometry")], by="merge_id")
###
gadm0_path <- paste0("/Users/christianbaehr/Desktop/shapefiles/gadm36_", abb, "_shp/gadm36_", abb, "_0.shp")
gadm0 <- st_read(gadm0_path, stringsAsFactors=F)
dat_out_new_merge_countrylevel <- dat_out_new[dat_out_new$level=="country", ]
dat_out_new_merge_countrylevel$geometry <- gadm0$geometry
dat_out_new_merge_countrylevel$name <- country
dat_out_new_merge_countrylevel$type <- "Country"
dat_out_new_merge_countrylevel$GID <- "Country"
dat_order <- names(dat_out_new_district_merge)
out <- rbind(dat_out_new_district_merge, dat_out_new_province_merge[, dat_order], dat_out_new_merge_countrylevel[, dat_order])
out$geometry[out$level=="country"] <- NULL
out <- out[, !(names(out) %in% c("merge_id", "GEO_codedUp", "location_details", "GEO_geojsonLink"))]
out$country <- country
names(out)[names(out)=="type"] <- "name_type"
out_file <- paste0("/Users/christianbaehr/Downloads/", country, "_2000-17_geocoded_", as.character(Sys.Date()), ".geojson")
out_file_csv <- paste0("/Users/christianbaehr/Downloads/", country, "_2000-17_geocoded_", as.character(Sys.Date()), ".csv")
write_sf(out, out_file, driver="GeoJSON", delete_dsn=T)
write.csv(data.frame(out)[names(out)!="geometry"], out_file_csv, row.names = F)
}
rm(list = ls())
library(sf)
###
###
files <- paste0("/Users/christianbaehr/Downloads/country_files/",
grep(".csv", dir("/Users/christianbaehr/Downloads/country_files"), value = T))
temp <- names(read.csv(grep("Pakistan", files, value=T)))
for (i in 1:length(files)) {
if(i==1) {
dat <- read.csv(files[i], stringsAsFactors = F)[, temp]
} else {
dat <- rbind(dat, read.csv(files[i], stringsAsFactors = F)[, temp])
}
}
### MALDIVES
mal <- read.csv("/Users/christianbaehr/Github/SCA Geocoding/Maldives/maldives_master.csv",
stringsAsFactors = F)
mal[, c("level")] <- NA
mal <- mal[, names(dat)]
dat <- rbind(dat, mal)
###
table(dat$level)
dat$level[(dat$level=="country" | dat$name_type=="Country")] <- "ADM0"
dat$level[dat$level=="province"] <- "ADM1"
dat$level[dat$level=="district"] <- "ADM2"
dat$name_type[dat$GID=="Country"] <- "Country"
dat$name_type[(is.na(dat$name_type) & dat$level=="ADM2")] <- "District"
dat$name_type[dat$name_type=="Distict"] <- "District"
dat$name_type[dat$name_type=="Autononous Region"] <- "Autonomous Region"
table(dat$country)
table(dat$name_type)
table(dat$level)
View(dat)
dat <- dat[, !(names(dat) %in% c("sources", "GEO_notes", "Christian.Notes"))]
dat$GID[(dat$level=="ADM0" & dat$country=="Afghanistan")] <- "AFG"
dat$GID[(dat$level=="ADM0" & dat$country=="Bangladesh")] <- "BGD"
dat$GID[(dat$level=="ADM0" & dat$country=="India")] <- "IND"
dat$GID[(dat$level=="ADM0" & dat$country=="Kazakhstan")] <- "KAZ"
dat$GID[(dat$level=="ADM0" & dat$country=="Kyrgyzstan")] <- "KGZ"
dat$GID[(dat$level=="ADM0" & dat$country=="Pakistan")] <- "PAK"
dat$GID[(dat$level=="ADM0" & dat$country=="Sri Lanka")] <- "LKA"
dat$GID[(dat$level=="ADM0" & dat$country=="Tajikistan")] <- "TJK"
dat$GID[(dat$level=="ADM0" & dat$country=="Turkmenistan")] <- "TKM"
dat$GID[(dat$level=="ADM0" & dat$country=="Uzbekistan")] <- "UZB"
dat$GID[(dat$level=="ADM0" & dat$country=="Maldives")] <- "MDV"
dat <- dat[order(dat$GID), ]
###
###
write.csv(dat, paste0("/Users/christianbaehr/Downloads/china-sca_2000-17_geocoded_", as.character(Sys.Date()), ".csv"))
